{"version":3,"sources":["components/layout/SignedInLinks.js","store/actions/authActions.js","components/layout/SignedOutLinks.js","components/layout/Navbar.js","components/dashboard/Notifications.js","components/project/ProjectSummary.js","components/project/ProjectList.js","components/dashboard/Dashboard.js","components/project/ProjectDetails.js","components/auth/SignIn.js","components/auth/SignUp.js","components/project/CreateProject.js","store/actions/projectActions.js","App.js","serviceWorker.js","store/reducers/authReducer.js","store/reducers/projectReducer.js","store/reducers/rootReducer.js","config/fbConfig.js","index.js"],"names":["connect","dispatch","signOut","getState","firebase","getFirebase","auth","then","type","logout","props","className","to","onClick","profile","initials","SignedOutLinks","state","console","log","links","uid","Notifications","notifications","map","item","key","id","user","content","moment","time","toDate","fromNow","ProjectSummary","project","title","authorFirstName","authorLastName","createdAt","calendar","ProjectList","projects","Dashboard","this","Component","compose","firestore","ordered","firestoreConnect","collection","orderBy","limit","ownProps","match","params","data","SignIn","email","password","handleChange","e","setState","target","value","handleSubmit","preventDefault","signIn","authError","onSubmit","htmlFor","onChange","creds","credentials","signInWithEmailAndPassword","catch","err","SignUp","firstName","lastName","signUp","newUser","getFirestore","createUserWithEmailAndPassword","resp","doc","set","CreateProject","createProject","history","push","authorId","add","Date","App","exact","path","component","ProjectDetails","Boolean","window","location","hostname","initState","authReducer","action","message","projectReducer","rootReducer","combineReducers","firestoreReducer","firebaseReducer","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","settings","timestampsInSnapshots","store","createStore","applyMiddleware","thunk","withExtraArgument","reactReduxFirebase","fbConfig","useFirestoreForProfile","userProfile","attachAuthIsReady","reduxFirestore","firebaseAuthIsReady","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","error"],"mappings":"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","file":"static/js/main.74161216.chunk.js","sourcesContent":["import React from 'react'\nimport { NavLink } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signOut } from '../../store/actions/authActions'\n\nconst SignedInLinks = (props) => {\n  return (\n    <ul className=\"right\">\n      <li><NavLink to='/createproject'>New Project</NavLink></li>\n      <li><a onClick={ props.signOut }>Logout</a></li>\n      <li><NavLink to='/' className='btn btn-floating pink lighten-1'>\n        {props.profile.initials}\n      </NavLink></li>\n    </ul>\n  )\n}\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    signOut: () => dispatch(signOut())\n  }\n}\n\nexport default connect(null, mapDispatchToProps)(SignedInLinks)","export const signIn = (credentials) => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signInWithEmailAndPassword(\n            credentials.email,\n            credentials.password\n        ).then(() => {\n            dispatch({ type: 'LOGIN_SUCCESS' });\n        }).catch((err) => {\n            dispatch({ type: 'LOGIN_ERROR', err })\n        })\n    }\n}\n\nexport const signOut = () => {\n    return (dispatch, getState, {getFirebase}) => {\n        const firebase = getFirebase();\n\n        firebase.auth().signOut().then(() => {\n            dispatch({ type: 'SIGNOUT_SUCCESS' })\n        });\n        firebase.logout()\n    }\n}\n\nexport const signUp = (newUser) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        const firebase = getFirebase();\n        const firestore = getFirestore();\n\n        firebase.auth().createUserWithEmailAndPassword(\n            newUser.email,\n            newUser.password\n        ).then((resp) => {\n            return firestore.collection('users').doc(resp.user.uid).set({\n                firstName: newUser.firstName,\n                lastName: newUser.lastName,\n                initials: newUser.firstName[0] + newUser.lastName[0]\n            })\n        }).then(() => {\n            dispatch({ type: 'SIGNUP_SUCCESS' })\n        }).catch(err => {\n            dispatch({ type: 'SIGNUP_ERROR', err })\n        })\n    }\n}","import React from 'react'\nimport { NavLink } from 'react-router-dom'\n\nconst SignedOutLinks = () => {\n  return (\n    <ul className=\"right\">\n      <li><NavLink to='/signup'>Sign Up</NavLink></li>\n      <li><NavLink to='/signin'>Login</NavLink></li>\n    </ul>\n  )\n}\n\nexport default SignedOutLinks","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport SignedInLinks from './SignedInLinks'\nimport SignedOutLinks from './SignedOutLinks'\nimport { connect } from 'react-redux'\n\nconst Navbar = (props) => {\n  const { auth, profile } = props\n  // console.log(auth)\n  const links = auth.uid ? <SignedInLinks profile={profile} /> : <SignedOutLinks />;\n  return (\n    <nav className=\"nav-wrapper grey darken-3\">\n      <div className=\"container\">\n        <Link to='/' className=\"brand-logo\">MarioPlan</Link>\n        { links }\n      </div>\n    </nav>\n  )\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return {\n    auth: state.firebase.auth,\n    profile: state.firebase.profile\n  }\n}\n\nexport default connect(mapStateToProps)(Navbar)","import React from 'react'\nimport moment from 'moment'\n\nconst Notifications = (props) => {\n  const {notifications} = props;\n  return (\n    <div className=\"section\">\n      <div className=\"card z-depth-0\">\n        <div className=\"card-content\">\n          <span className=\"card-title\">Notifications</span>\n          <ul className=\"notifications\">\n            { notifications && notifications.map(item => {\n              return (\n                <li key={item.id}>\n                  <span className=\"pink-text\">{item.user} </span>\n                  <span>{item.content}</span>\n                  <div className=\"grey-text note-date\">\n                    {moment(item.time.toDate()).fromNow()}\n                  </div>\n                </li>\n              )\n            })}\n          </ul>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Notifications","import React from 'react'\nimport moment from 'moment'\n\nconst ProjectSummary = ({project}) => {\n    return (\n        <div className=\"card z-depth-0 project-summary\">\n        <div className=\"card-content grey-text text-darken-3\">\n    <span className=\"card-title\">{project.title}</span>\n          <p>Posted by {project.authorFirstName} {project.authorLastName}</p>\n          <p className=\"grey-text\">{moment(project.createdAt.toDate()).calendar()}</p>\n        </div>\n      </div>\n    )\n}\n\nexport default ProjectSummary","import React from 'react'\nimport ProjectSummary from './ProjectSummary'\nimport { Link } from 'react-router-dom'\n\nconst ProjectList = ({projects}) => {\n  return (\n    <div className=\"project-list section\">\n      { projects && projects.map(project => {\n        return (\n          <Link to={'/project/' + project.id } key={project.id} >\n            <ProjectSummary project={project} />\n          </Link>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ProjectList","import React, { Component } from 'react'\nimport Notifications from './Notifications'\nimport ProjectList from '../project/ProjectList'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\n\nclass Dashboard extends Component {\n  render(){\n    // console.log(this.props)\n    const { projects, auth, notifications } = this.props;\n    if(!auth.uid) return <Redirect to='/signin' />\n    return (\n      <div className=\"dashboard container\">\n        <div className=\"row\">\n          <div className=\"col s12 m6\">\n            <ProjectList projects={projects} />\n          </div>\n          <div className=\"col s12 m5 offset-m1\">\n            <Notifications notifications={notifications}/>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}\n\nconst mapStateToProps = (state) => {\n  console.log(state);\n  return {\n    projects: state.firestore.ordered.projects,\n    auth: state.firebase.auth,\n    notifications: state.firestore.ordered.notifications\n  }\n}\n\nexport default compose(\n  connect(mapStateToProps),\n  firestoreConnect([\n    { collection: 'projects', orderBy: ['createdAt', 'desc']},\n    { collection: 'notifications', limit: 3, orderBy: ['time', 'desc']}\n  ])\n)(Dashboard)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { firestoreConnect } from 'react-redux-firebase'\nimport { compose } from 'redux'\nimport { Redirect } from 'react-router-dom'\nimport moment from 'moment'\n\nconst ProjectDetails = (props) => {\n    const { project, auth } = props;\n    if(!auth.uid) return <Redirect to='/signin' />\n    if (project) {\n        return (\n            <div>\n                <div className=\"container section project-details\">\n                    <div className=\"card z-depth-0\">\n                        <div className=\"card-content\">\n                            <span className=\"card-title\">{ project.title }</span>\n                            <p>{ project.content }</p>\n                        </div>\n                        <div className=\"card-action grey lighten-4 grey-text\">\n                            <div>Posted by { project.authorFirstName } { project.authorLastName }</div>\n                            <div>{moment(project.createdAt.toDate()).calendar()}</div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n        )\n    } else {\n        return (\n            <div className=\"container center\">\n                <p>Loading project...</p>\n            </div>\n        )\n    }\n}\n\nconst mapStatetoProps = (state, ownProps) => {\n    // console.log(state)\n    const id = ownProps.match.params.id;\n    const projects = state.firestore.data.projects;\n    const project = projects ? projects[id] : null\n    return {\n        project: project,\n        auth: state.firebase.auth\n    }\n}\n\nexport default compose(\n    connect(mapStatetoProps),\n    firestoreConnect([\n        { collection: 'projects' }\n    ])\n)(ProjectDetails)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { signIn } from '../../store/actions/authActions' \nimport { Redirect } from 'react-router-dom'\n\nclass SignIn extends Component {\n    state = {\n        email: \"\",\n        password: \"\"\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signIn(this.state);\n    }\n    render() {\n        const { authError, auth } = this.props;\n        if(auth.uid) return <Redirect to='/' />\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign In</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Login</button>\n                        <div className=\"red-text center\">\n                            { authError ? <p>{ authError }</p> : null }\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        authError: state.auth.authError,\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signIn: (creds) => dispatch(signIn(creds))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignIn)\n","import React, { Component } from 'react'\nimport { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport { signUp } from '../../store/actions/authActions'\n\nclass SignUp extends Component {\n    state = {\n        email: \"\",\n        password: \"\",\n        firstName: \"\",\n        lastName: \"\"\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        this.props.signUp(this.state)\n    }\n    render() {\n        const { auth, authError } = this.props;\n        if(auth.uid) return <Redirect to='/' />\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Sign Up</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"email\">Email</label>\n                        <input type=\"email\" id=\"email\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"password\">Password</label>\n                        <input type=\"password\" id=\"password\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"firstName\">First Name</label>\n                        <input type=\"text\" id=\"firstName\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"lastName\">Last Name</label>\n                        <input type=\"text\" id=\"lastName\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Sign Up</button>\n                        <div className=\"red-text center\">\n                            { authError ? <p>{ authError }</p> : null }\n                        </div>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth,\n        authError: state.auth.authError\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        signUp: (newUser) => dispatch(signUp(newUser))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(SignUp)\n","import React, { Component } from 'react'\nimport { connect } from 'react-redux'\nimport { createProject } from '../../store/actions/projectActions'\nimport { Redirect } from 'react-router-dom'\n\nclass CreateProject extends Component {\n    state = {\n        title: \"\",\n        content: \"\"\n    }\n    handleChange = (e) => {\n        this.setState({\n            [e.target.id]: e.target.value\n        })\n    }\n    handleSubmit = (e) => {\n        e.preventDefault();\n        // console.log(this.state);\n        this.props.createProject(this.state);\n        this.props.history.push('/');\n    }\n    render() {\n        const { auth } = this.props;\n        if(!auth.uid) return <Redirect to='/signin' />\n        return (\n            <div className=\"container\">\n                <form onSubmit={this.handleSubmit} className=\"white\">\n                    <h5 className=\"grey-text text-darken-3\">Create Project</h5>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"title\">Title</label>\n                        <input type=\"text\" id=\"title\" onChange={this.handleChange} />\n                    </div>\n                    <div className=\"input-field\">\n                        <label htmlFor=\"content\">Content</label>\n                        <textarea id=\"content\" className=\"materialize-textarea\" onChange={this.handleChange} ></textarea>\n                    </div>\n                    <div className=\"input-field\">\n                        <button className=\"btn pink lighten-1 z-depth-0\">Create</button>\n                    </div>\n                </form>\n            </div>\n        )\n    }\n}\n\nconst mapStateToProps = (state) => {\n    return {\n        auth: state.firebase.auth\n    }\n}\n\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        createProject: (project) => dispatch(createProject(project))\n    }\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(CreateProject)\n","export const createProject = (project) => {\n    return (dispatch, getState, {getFirebase, getFirestore}) => {\n        // TODO make async call to database\n        const firestore = getFirestore();\n        const profile = getState().firebase.profile;\n        const authorId = getState().firebase.auth.uid;\n        firestore.collection('projects').add({\n            ...project,\n            authorFirstName: profile.firstName,\n            authorLastName: profile.lastName,\n            authorId: authorId,\n            createdAt: new Date()\n        }).then(() => {\n            dispatch({ type: \"CREATE_PROJECT\", project });\n        }).catch((err) => {\n            dispatch({ type: \"CREATE_PROJECT_ERROR\", err });\n        })\n        \n    }\n};","import React, { Component } from 'react';\nimport { BrowserRouter, Route, Switch } from 'react-router-dom';\nimport Navbar from './components/layout/Navbar'\nimport Dashboard from './components/dashboard/Dashboard'\nimport ProjectDetails from './components/project/ProjectDetails'\nimport SignIn from './components/auth/SignIn'\nimport SignUp from './components/auth/SignUp'\nimport CreateProject from './components/project/CreateProject'\n\nclass App extends Component {\n  render() {\n    return (\n      <BrowserRouter>\n        <div className=\"App\">\n          <Navbar />\n          <Switch>\n            <Route exact path='/' component={Dashboard} />\n            <Route path='/project/:id' component={ProjectDetails} />\n            <Route path='/signin' component={SignIn} />\n            <Route path='/signup' component={SignUp} />\n            <Route path='/createproject' component={CreateProject} />\n          </Switch>\n        </div>\n      </BrowserRouter>\n    );\n  }\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","const initState = {\n    authError: null\n}\n\nconst authReducer = (state = initState, action) => {\n    switch(action.type) {\n        case 'LOGIN_ERROR':\n            console.log('login error');\n            return {\n                ...state,\n                authError: 'Login Failed'\n            }\n        case 'LOGIN_SUCCESS':\n            console.log('login success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNOUT_SUCCESS':\n            console.log('signout success');\n            return state;\n        case 'SIGNUP_SUCCESS':\n            console.log('signup success');\n            return {\n                ...state,\n                authError: null\n            }\n        case 'SIGNUP_ERROR':\n            console.log('signup error');\n            return {\n                ...state,\n                authError: action.err.message\n            }\n        default:\n            return state;\n    }\n}\n\nexport default authReducer","const initState = {\n    projects: [\n        {id: '1', title: \"help me find peach\", content: \"blah blah blah\"},\n        {id: '2', title: \"collect all the stars\", content: \"blah blah blah\"},\n        {id: '3', title: \"egg hunt with yoshi\", content: \"blah blah blah\"}\n    ]\n}\n\nconst projectReducer = (state = initState, action) => {\n    switch (action.type) {\n        case 'CREATE_PROJECT':\n            console.log('created project', action.project);\n            return state;\n        case 'CREATE_PROJECT_ERROR':\n            console.log('create project error', action.err);\n            return state;\n        default:\n            return state;\n    }\n}\n\nexport default projectReducer","import authReducer from './authReducer'\nimport projectReducer from './projectReducer'\nimport { combineReducers } from 'redux'\nimport { firestoreReducer } from 'redux-firestore'\nimport { firebaseReducer } from 'react-redux-firebase'\n\nconst rootReducer = combineReducers({\n    auth: authReducer,\n    project: projectReducer,\n    firestore: firestoreReducer,\n    firebase: firebaseReducer\n});\n\nexport default rootReducer","import firebase from 'firebase/app'\nimport 'firebase/firestore'\nimport 'firebase/auth'\n\n// Your web app's Firebase configuration\nvar firebaseConfig = {\n    apiKey: \"AIzaSyA65tccoObbNJALbmmTL2MXwyGsTZwqa5A\",\n    authDomain: \"hritik-marioplan.firebaseapp.com\",\n    databaseURL: \"https://hritik-marioplan.firebaseio.com\",\n    projectId: \"hritik-marioplan\",\n    storageBucket: \"hritik-marioplan.appspot.com\",\n    messagingSenderId: \"119702070966\",\n    appId: \"1:119702070966:web:93956af6dcb7990ce1a817\"\n};\n// Initialize Firebase\nfirebase.initializeApp(firebaseConfig);\nfirebase.firestore().settings({ timestampsInSnapshots: true });\n\nexport default firebase","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport { createStore, applyMiddleware, compose } from 'redux'\nimport rootReducer from './store/reducers/rootReducer'\nimport { Provider } from 'react-redux'\nimport thunk from 'redux-thunk'\nimport { reduxFirestore, getFirestore } from 'redux-firestore';\nimport { reactReduxFirebase, getFirebase } from 'react-redux-firebase';\nimport fbConfig from './config/fbConfig'\n\nconst store = createStore(rootReducer,\n  compose(\n    applyMiddleware(thunk.withExtraArgument({ getFirebase, getFirestore })),\n    reactReduxFirebase(fbConfig, {useFirestoreForProfile: true, userProfile: 'users', attachAuthIsReady: true}), // store enhancers\n    reduxFirestore(fbConfig)\n  )\n);\n\nstore.firebaseAuthIsReady.then(() => {\n  ReactDOM.render(\n    <React.StrictMode>\n      <Provider store={store}>\n        <App />\n      </Provider>\n    </React.StrictMode>,\n    document.getElementById('root')\n  );\n})\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}